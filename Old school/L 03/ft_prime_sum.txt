Assignment name  : add_prime_sum
Expected files   : add_prime_sum.c
Allowed functions: write, exit
--------------------------------------------------------------------------------

Write a program that takes a positive integer as argument and displays the sum
of all prime numbers inferior or equal to it followed by a newline.

If the number of arguments is not 1, or the argument is not a positive number,
just display 0 followed by a newline.

Yes, the examples are right.

Examples:

$>./add_prime_sum 5
10
$>./add_prime_sum 7 | cat -e
17$
$>./add_prime_sum | cat -e
0$
$>
--------------------------------------------------------------------------------
#include <stdio.h>
#include <unistd.h>

void ft_putchar(char c)
{
    write(1, &c, 1);
}

void ft_putnbr(int n)
{
    if(n >= 10)
    {
        ft_putnbr(n / 10);
    }
    ft_putchar(n % 10 + '0');
}
 //========================= putnbr

int ft_atoi(const char *s) // atoi
{
    int r = 0;

    while(*s >= '0' && *s <= '9')
    {
        r = r * 10 + (*s++ - '0');
    }

    return r;
}

int ft_isPrime(int n)// verifica se o numero e primo
{
    int i = 3;

    if(n  == 2)
    {
        return 1;
    }
    if(n <= 1) 
    {
        return 0;
    }
    if(n % 2 == 0)
    {
        return 0;
    }
    while(i * i <= n)
    {
        if(n % i == 0)
        {
            return 0;
        }
        i+=2;
    }

    return 1;
}

int ft_primecount(int n)
{
    int i = 2;
    int count = 0;

    while(i <= n)
    {
        if(ft_isPrime(i))
        {
            count = count + i;
        }
        i++;
    }

   return count;
}


int main(int ac, char **av)
{
    if (ac == 2)
    {
        int n = ft_atoi(av[1]);
        if (n > 0)
        {
            int result = ft_primecount(n);
            ft_putnbr(result);
        }
        else
        {
            write(1, "0", 1);
        }
        write(1, "\n", 1);
    }
    return 0;
}
