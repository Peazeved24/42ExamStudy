 Assignment name  : print_hex
Expected files   : print_hex.c
Allowed functions: write
--------------------------------------------------------------------------------

Write a program that takes a positive (or zero) number expressed in base 10,
and displays it in base 16 (lowercase letters) followed by a newline.

If the number of parameters is not 1, the program displays a newline.

Examples:

$> ./print_hex "10" | cat -e
a$
$> ./print_hex "255" | cat -e
ff$
$> ./print_hex "5156454" | cat -e
4eae66$
$> ./print_hex | cat -e
$
--------------------------------------------------------------------------------
#include <stdio.h>
#include <unistd.h>


int ft_atoi(char *str)
{
    int result = 0;
    int i  =0;
    
    
    while(str[i] && str[i] >= '0' && str[i] <= '9')
    {
        result = result * 10 + (str[i] - '0');// passar  o digito para numero
        i++;

    }
    
    return result; //  retorna me os digitos em numeros ;
}

void ft_hex(int nb)
{
    char hexa[16] = "0123456789ABCDEF";
    char result[9];
    int i = 0;

    if(nb == 0)
    {
        write(1, "0", 1);
        return ;
    }

    while(nb > 0)
    {
        int rest = nb % 16; //obter a posicao em hex.
        result[i] = hexa[rest];
        nb = nb / 16;
        i++;
    }

    

    for(i = i - 1; i >= 0 ; i--)
    {
        write(1, &result[i], 1);
    }
}

int main(int ac , char **av)
{
    if(ac  == 2)
    {
        int nb = ft_atoi(av[1]);
        ft_hex(nb);
    }
    write(1, "\n", 1);

    return 0;
}