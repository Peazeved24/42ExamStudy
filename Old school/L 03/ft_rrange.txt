Assignment name  : ft_rrange
Expected files   : ft_rrange.c
Allowed functions: malloc
--------------------------------------------------------------------------------

Write the following function:

int     *ft_rrange(int start, int end);

It must allocate (with malloc()) an array of integers, fill it with consecutive
values that begin at end and end at start (Including start and end !), then
return a pointer to the first value of the array.

Examples:

- With (1, 3) you will return an array containing 3, 2 and 1
- With (-1, 2) you will return an array containing 2, 1, 0 and -1.
- With (0, 0) you will return an array containing 0.
- With (0, -3) you will return an array containing -3, -2, -1 and 0.
--------------------------------------------------------------------------------
#include <stdio.h>
#include <unistd.h>
#include <stdlib.h>

int ft_dif(int start , int end)
{
    return (start > end) ? (start - end )+ 1 : (end - start )+ 1;
}


int     *ft_rrange(int start, int end)
{
    int i = 0;
    int dif  = ft_dif(start , end);
    int *rrange = (int*)malloc(dif * sizeof(int));

    if(ft_rrange == NULL)
    {
        return NULL;
    }

    if(end <= start)
    {
        while(end <= start)
        {
            rrange[i++] = end++;
        }
    }
    else
    {
        while(end >= start)
        {
            rrange[i++] = end--;
        }
    }


    return rrange;
}

int main()
{
    int i = 0;
    int start = 0;
    int end = 9;
    int dif = ft_dif(start , end);
    int *result  = ft_rrange(start , end);

    while(i < dif)
    {
        printf("%i", result[i++]);
    }

    free(result);

    return 0;
}






