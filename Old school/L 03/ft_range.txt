Assignment name  : ft_range
Expected files   : ft_range.c
Allowed functions: malloc
--------------------------------------------------------------------------------

Write the following function:

int     *ft_range(int start, int end);

It must allocate (with malloc()) an array of integers, fill it with consecutive
values that begin at start and end at end (Including start and end !), then
return a pointer to the first value of the array.

Examples:

- With (1, 3) you will return an array containing 1, 2 and 3.
- With (-1, 2) you will return an array containing -1, 0, 1 and 2.
- With (0, 0) you will return an array containing 0.
- With (0, -3) you will return an array containing 0, -1, -2 and -3.
-------------------------------------------------------------------------
#include <stdio.h>
#include <unistd.h>
#include <stdlib.h>

int ft_dif(int start , int end)
{
    return (start > end) ? (start - end) + 1 : (end - start) + 1;
}

int     *ft_rrange(int start, int end) 
{
    int i = 0;
    int dif = ft_dif(start, end);
    int *range = (int*)malloc(dif * sizeof(int));

    if(range ==  NULL)
    {
        return NULL;
    }


    if(start <= end)
    {
        while(start <= end)
        {
            range[i++] = start++;
        }
    }
    else
    {
        while(start >= end)
        {
            range[i++] = start--;
        }
    }

    return range;
}

int main()
{
    int i = 0;  
    int start = -1;
    int end = 2;
    int dif =  ft_dif(start ,end);
    int *result = ft_rrange(start , end);

    while(i < dif)
    {
        printf("%d ", result[i++]);
    }

    free(result);


    return 0;
}





