#include <stdio.h>
#include <unistd.h>
#include <stdlib.h>

int ft_strlen(char *str)
{
    int i = 0;
    
    while(str[i])
    {
        i++;
    }

    return i;
}

int ft_blank(char c)
{
    return (c >= 9 && c <= 13 || c == 32);
}

int ft_wc(char *str)
{
    int flag = 0;
    int wc = 0;

    while(*str)
    {
        if(ft_blank(*str))
        {
            flag = 0;
        }
        if(flag == 0)
        {
            wc++;
            flag = 1;
        }
        str++;
    }

    return wc;
}

void ft_revWords(char *str) // ft principal
{
    int i = 0;
    int wc = ft_wc(str);
    char **words =(char**)malloc((wc + 1) * sizeof(char*)); // alocar memoria para o array.
    char *start = str; 


    while(*str) // passar palavra a minha str para o array.
    {
        if(ft_blank(*str) || *(str + 1) == '\0')
        {
            int len = str - start + !ft_blank(*str);

            words[i] = (char*)malloc((len + 1) * sizeof(char));// alocar memoria para as minhas palavras]

            for(int j = 0;  j < len ; j++)
            {
                words[i][j] = start[j]; // passar os caracters de start[j] para a posicao j do array ( i = ptr / j = caractres);
            }
            words[i][len] = '\0';
            start = str + 1;
	     i++;
        }
        str++;
    }

   for(int j = wc -1; j >= 0 ; j--) // reversao da str.
   {
        write(1, words[j], ft_strlen(words[j]));

        if(j > 0) // garante que uma palvra foi imprssa
        {
            write(1, " ", 1);
        }
        free(words[j]);
   }

   free(words);
}

int main(int ac , char **av)
{
    if(ac == 2)
    {
        char *str = av[1];
        ft_revWords(str);
    }

    write(1, "\n", 1);
   
   return 0;
}