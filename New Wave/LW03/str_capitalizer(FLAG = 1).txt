Assignment name  : str_capitalizer
Expected files   : str_capitalizer.c
Allowed functions: write
--------------------------------------------------------------------------------

Write a program that takes one or several strings and, for each argument,
capitalizes the first character of each word (If it's a letter, obviously),
puts the rest in lowercase, and displays the result on the standard output,
followed by a \n.

A "word" is defined as a part of a string delimited either by spaces/tabs, or
by the start/end of the string. If a word only has one letter, it must be
capitalized.

If there are no arguments, the progam must display \n.

Example:

$> ./str_capitalizer | cat -e
$
$> ./str_capitalizer "Premier PETIT TesT" | cat -e
Premier Petit Test$
$> ./str_capitalizer "DeuxiEmE tEST uN PEU moinS  facile" "   attention C'EST pas dur QUAND mEmE" "ALLer UN DeRNier 0123456789pour LA rouTE    E " | cat -e
Deuxieme Test Un Peu Moins  Facile$
   Attention C'est Pas Dur Quand Meme$
Aller Un Dernier 0123456789pour La Route    E $
$>


--------------------------------------------------------------------------------
#include <stdio.h>
#include <unistd.h>

int ft_il(char c) 
{
    return (c >= 'a' && c <= 'z');
}

int ft_iu(char c)
{
    return (c >= 'A' && c <= 'Z');
}


void ft_strcap(char *str)
{
    int i = 0;
    int flag = 1;

    while(str[i])
    {
        if(str[i] == ' ' || str[i] == '\t')
        {
            flag = 1;
        }
        else
        {
            if(flag)
            {
                if(ft_il(str[i]))
                {
                    str[i] = 'A' + (str[i] - 'a');
                }
                flag = 0;
            }
            else
            {
                if(ft_iu(str[i]))
                {
                    str[i] = 'a' + (str[i] - 'A'); 
                }
            }
        }
        i++;
    }
}


int main(int ac , char **av)
{
    if(ac < 2)
    {
        write(1, "\n", 1);
    }

    int i = 1;

    while(i < ac)
    {
        char *str = av[i];
        ft_strcap(str);
        while(*str)
        {
            write(1, str++, 1);
        }
        write(1, " ", 1);
        i++;
    }

    write(1, "\n", 1);


    return 0;
}