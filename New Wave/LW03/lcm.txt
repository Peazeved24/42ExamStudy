Write a function who takes two unsigned int as parameters and returns the
computed LCM of those parameters.

LCM (Lowest Common Multiple) of two non-zero integers is the smallest positive
integer divisible by the both integers. 

A LCM can be calculated in two ways:

- You can calculate every multiples of each integers until you have a common
multiple other than 0

- You can use the HCF (Highest Common Factor) of these two integers and
calculate as follows:

    LCM(x, y) = | x * y | / HCF(x, y)

 | x * y | means "Absolute value of the product of x by y"

If at least one integer is null, LCM is equal to 0.

Your function must be prototyped as follows:

 unsigned int    lcm(unsigned int a, unsigned int b);
------------------------------------------------------------------------
#include <stdio.h>
#include <unistd.h>
#include <stdlib.h>

unsigned int mdc(unsigned int a , unsigned int  b)
{
    while(b)
    {
        unsigned int  temp = b;
        b = a % b;
        a = temp;
    }


    return a;
}


unsigned int    lcm(unsigned int a, unsigned int b)
{
    unsigned int rmdc = mdc(a ,b);

    if(a == 0 || b == 0)
    {
        return 0;
    }

    unsigned int  result = (a / rmdc) * b;

    return result;
}

int main()
 {
     unsigned int a = 6;
     unsigned int b = 7;
     
     printf("%u", lcm(a ,b));
     
     
     return 0;
 }