Write a program called alpha_mirror that takes a string and displays this string
after replacing each alphabetical character by the opposite alphabetical
character, followed by a newline.

'a' becomes 'z', 'Z' becomes 'A'
b x
c = y;
d = w; 
'd' becomes 'w', 'M' becomes 'N'

and so on.

Case is not changed.

If the number of arguments is not 1, display only a newline.

Examples:

$>./alpha_mirror "abc"
zyx
$>./alpha_mirror "My horse is Amazing." | cat -e
Nb slihv rh Znzarmt.$
$>./alpha_mirror | cat -e
$
$>
-------------------------------------------------------------------------------------------------s
#include <stdio.h>
#include <unistd.h>


int ft_strlen(char *str)
{
    int i = 0;
    
    while(str[i])
    {
        i++;
    }
    
    return i;
}


int ft_am(char *str)
{
    int i = 0;
    int len = ft_strlen(str);
    
    while(i < len)
    {
        if(str[i] >= 'a' && str[i] <= 'z')
        {
           str[i]= 'z' - (str[i] - 'a');
        }
        else if(str[i] >= 'A' && str[i] <= 'Z')
        {
            str[i]= 'Z' - (str[i] - 'A');
        }
        i++;
    }
    
    
    
}

int main(int ac , char **av)
{
   
  if(ac == 2)
  {  
    char *str = av[1];
    
    ft_am(str);
    
    write(1, str, ft_strlen(str));
    write(1, "\n", 1);
  }
    return 0;
}  





